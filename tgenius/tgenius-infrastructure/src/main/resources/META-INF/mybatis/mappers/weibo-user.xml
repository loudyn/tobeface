<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tobeface.tgenius.domain.WeiboUser">

<resultMap type="WeiboUser" id="weiboUserResult">
	<id property="name" column="name"/>
	<result property="nickname" column="nickname"/>
	<result property="location" column="location"/>
	<result property="homepage" column="homepage"/>
	<result property="careername" column="careername"/>
	<result property="sex" column="sex"/>
	<result property="birthYear" column="birth_year"/>
	<result property="fansCount" column="fans_count"/>
	<result property="isVip" column="is_vip"/>
	<result property="verifyInfo" column="verify_info"/>
	<result property="isEnterprise" column="is_enterprise"/>
	<result property="isRealname" column="is_realname"/>
</resultMap>

<sql id="commonSelect">
	select 
		self.name as name,
		self.nickname as nickname,
		self.location as location,
		self.careername as careername,
		self.sex as sex,
		self.birth_year as birth_year,
		self.fans_count as fans_count,
		self.is_vip as is_vip,
		self.verify_info as verify_info,
		self.is_enterprise as is_enterprise,
		self.is_realname as is_realname 
	from weibo_user self 
</sql>
<sql id="jsonSelect">
	select 
		self.json as json 
	from weibo_user self
</sql>

<insert id="save" keyProperty="name" >
	insert into 
		weibo_user(name,nickname,location,homepage,careercode,careername,sex,birth_year,fans_count,is_vip,verify_info,is_enterprise,is_realname,json,status) 
	values(#{entity.name},#{entity.nickname},#{entity.location},#{entity.homepage},#{entity.careercode},(select name from weibo_career where id=#{entity.careercode}),
			#{entity.sex},#{entity.birthYear},#{entity.fansCount},#{entity.isVip},#{entity.verifyInfo},#{entity.isEnterprise},#{entity.isRealname},#{json},0)				
</insert>

<update id="update">
	update weibo_user 
	set nickname=#{entity.nickname},location=#{entity.location},homepage=#{entity.homepage},careercode=#{entity.careercode},careername=(select name from weibo_career where id=#{entity.careercode}),
		sex=#{entity.sex},birth_year=#{entity.birthYear},fans_count=#{entity.fansCount},is_vip=#{entity.isVip},verify_info=#{entity.verifyInfo},
		is_enterprise=#{entity.isEnterprise},is_realname=#{entity.isRealname},json=#{json},status=0 where name=#{entity.name}
</update>

<delete id="deleteByName" >
	delete from weibo_user where name=#{name}
</delete>

<select id="queryUniqueByName" resultType="hashmap">
	<include refid="jsonSelect"/>
	where self.name=#{name} and status=1
</select>

<select id="existsByName" resultType="boolean">
	select 1 from weibo_user where name=#{name}
</select>

<select id="query" resultMap="weiboUserResult">
	<include refid="commonSelect"/>
	where self.sex in (0,1,2) and self.is_vip in (0, 1) and status=1 order by self.fans_count desc 
</select>

<select id="queryPage" resultMap="weiboUserResult">
	<include refid="commonSelect"/>
	<where>
		<choose>
			<when test="params.sex != null and params.name != ''">
				self.sex=#{params.sex} 
			</when>
			<otherwise>
				self.sex in (0, 1, 2) 
			</otherwise>
		</choose>
		<choose>
			<when test="params.vip != null and params.vip != ''">
				and self.is_vip=#{params.vip} and status=1 
			</when>
			<otherwise>
				and self.is_vip in (0, 1) and status=1 
			</otherwise>
		</choose>
		<if test="params.name != null and params.name != ''">
			and self.name like concat(#{params.name},'%') 
		</if>
	</where>
	order by self.fans_count desc 
</select>
</mapper>